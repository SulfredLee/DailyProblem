
syntax = "proto3";

package peacock;

// The greeting service definition.
service Peacock {
    // Unary - request and respond
    rpc SaveFileToColud (SaveFileToColud_Msg) returns (NoneReply);
    rpc SaveRefDataFromQC (SaveRefDataFromQC_Msg) returns (NoneReply);
    // tweety - start
    rpc SaveStrategyConfig (SaveStrategyConfig_Msg) returns (SaveStrategyConfig_Reply);
    rpc GetStrategyConfig (GetStrategyConfig_Msg) returns (GetStrategyConfig_Reply);
    rpc RemoveStrategyConfig(RemoveStrategyConfig_Msg) returns (Dummy_Reply);
    rpc RemoveOldConfig (RemoveOldConfig_Msg) returns (Dummy_Reply);
    // tweety - end
    rpc HealthCheck (Ping) returns (Pong);
}

// tweety - start
message RemoveStrategyConfig_Msg {
    string strategy_name = 1;
    bool is_live = 2;
    repeated string strategy_id_list = 3;
}

message RemoveOldConfig_Msg {
    int32 days = 1;
}

message Dummy_Reply {
    string dummy = 1;
}

message GetStrategyConfig_Msg {
    string strategy_name = 1;
    bool is_live = 2;
}

message GetStrategyConfig_Reply {
    string status = 1;
    repeated string cfg_list = 2;
}

message SaveStrategyConfig_Msg {
    string strategy_config = 1;
}

message SaveStrategyConfig_Reply {
    string status = 1;
}
// tweety - end

message SaveFileToColud_Msg {
    string file_name = 1;
    string file_content = 2;
}

message SaveRefDataFromQC_Msg {
    string file_name = 1;
    string file_content = 2;
    string action_mode = 3;
}

message NoneReply {
    string reply = 1;
}

message Ping {
    string message = 1;
}

message Pong {
    string message = 1;
}
