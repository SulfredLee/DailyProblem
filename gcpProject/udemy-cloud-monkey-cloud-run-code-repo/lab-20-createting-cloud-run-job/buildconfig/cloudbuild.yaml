steps:
- id: "Build Docker Image"
  name: 'gcr.io/cloud-builders/docker'
  dir: 'lab-20-createting-cloud-run-job/microservices/customers'
  args: ['build', 
          '-t', 'us-central1-docker.pkg.dev/${PROJECT_ID}/cloud-monkey-artifact-registry/lab-20-get-customers-job-img',
          '.']

- id: "Push Docker Image To Artifact Registry"
  name: 'gcr.io/cloud-builders/docker'
  args: ['push', '--all-tags', 'us-central1-docker.pkg.dev/${PROJECT_ID}/cloud-monkey-artifact-registry/lab-20-get-customers-job-img']

- id: "Deploy Cloud Run Job"
  name: 'gcr.io/cloud-builders/gcloud'
  args: [
    'alpha', 'run', 'jobs', 'deploy', 'lab-20-get-customers-job', 
    '--service-account' ,'sa-customers-svc@${PROJECT_ID}.iam.gserviceaccount.com',
    '--memory', '512Mi',
    '--image', 'us-central1-docker.pkg.dev/${PROJECT_ID}/cloud-monkey-artifact-registry/lab-20-get-customers-job-img',
    '--region', 'us-central1',
    '--task-timeout', '1m10s',
    '--max-retries', '0',
    '--set-env-vars', 'CLOUD_SQL_CONNECTION_NAME=${PROJECT_ID}:us-central1:customers-db-instance',
    '--set-env-vars', 'BUCKET_NAME=bucket-outgoing-customers-${PROJECT_ID}',
    '--set-env-vars', 'ACCOUNTBALANCE_CLOUD_RUN_SERVICE_URL=${_ACCOUNTBALANCE_CLOUD_RUN_SERVICE_URL}',
    '--set-secrets', 'DB_USER=db-user:latest',
    '--set-secrets', 'DB_PASSWORD=db-password:latest',
    '--network' ,'default',
    '--subnet', 'default',
    '--vpc-egress', 'private-ranges-only',
    '--set-cloudsql-instances', '${PROJECT_ID}:us-central1:customers-db-instance'
    ]
timeout: 600s
options:
  logging: CLOUD_LOGGING_ONLY
  dynamic_substitutions: true
  